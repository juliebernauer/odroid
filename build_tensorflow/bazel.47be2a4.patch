diff --git compile.sh compile.sh
index 53fc412..11035d9 100755
--- compile.sh
+++ compile.sh
@@ -27,7 +27,7 @@ cd "$(dirname "$0")"
 # Set the default verbose mode in buildenv.sh so that we do not display command
 # output unless there is a failure.  We do this conditionally to offer the user
 # a chance of overriding this in case they want to do so.
-: ${VERBOSE:=no}
+: ${VERBOSE:=yes}
 
 source scripts/bootstrap/buildenv.sh
 
diff --git scripts/bootstrap/buildenv.sh scripts/bootstrap/buildenv.sh
index f97040f..53c4edb 100755
--- scripts/bootstrap/buildenv.sh
+++ scripts/bootstrap/buildenv.sh
@@ -40,7 +40,7 @@ PLATFORM="$(uname -s | tr 'A-Z' 'a-z')"
 
 MACHINE_TYPE="$(uname -m)"
 MACHINE_IS_64BIT='no'
-if [ "${MACHINE_TYPE}" = 'amd64' -o "${MACHINE_TYPE}" = 'x86_64' ]; then
+if [ "${MACHINE_TYPE}" = 'amd64' -o "${MACHINE_TYPE}" = 'x86_64' -o "${MACHINE_TYPE}" = 'aarch64' ]; then
   MACHINE_IS_64BIT='yes'
 fi
 
diff --git scripts/bootstrap/compile.sh scripts/bootstrap/compile.sh
index bf1da4d..1937670 100755
--- scripts/bootstrap/compile.sh
+++ scripts/bootstrap/compile.sh
@@ -43,11 +43,17 @@ linux)
   # JAVA_HOME must point to a Java installation.
   JAVA_HOME="${JAVA_HOME:-$(readlink -f $(which javac) | sed 's_/bin/javac__')}"
   if [ "${MACHINE_IS_64BIT}" = 'yes' ]; then
-    PROTOC=${PROTOC:-third_party/protobuf/protoc-linux-x86_64.exe}
-    GRPC_JAVA_PLUGIN=${GRPC_JAVA_PLUGIN:-third_party/grpc/protoc-gen-grpc-java-0.15.0-linux-x86_64.exe}
+    if [ "${MACHINE_IS_ARM}" = 'yes' ]; then
+      PROTOC=${PROTOC:-third_party/protobuf/protoc-linux-aarch64.exe}
+      GRPC_JAVA_PLUGIN=${GRPC_JAVA_PLUGIN:-third_party/grpc/protoc-gen-grpc-java-0.15.0-linux-aarch64.exe}
+    else
+      PROTOC=${PROTOC:-third_party/protobuf/protoc-linux-x86_64.exe}
+      GRPC_JAVA_PLUGIN=${GRPC_JAVA_PLUGIN:-third_party/grpc/protoc-gen-grpc-java-0.15.0-linux-x86_64.exe}
+    fi
   else
     if [ "${MACHINE_IS_ARM}" = 'yes' ]; then
       PROTOC=${PROTOC:-third_party/protobuf/protoc-linux-arm32.exe}
+      GRPC_JAVA_PLUGIN=${GRPC_JAVA_PLUGIN:-third_party/grpc/protoc-gen-grpc-java-0.15.0-linux-arm32.exe}
     else
       PROTOC=${PROTOC:-third_party/protobuf/protoc-linux-x86_32.exe}
       GRPC_JAVA_PLUGIN=${GRPC_JAVA_PLUGIN:-third_party/grpc/protoc-gen-grpc-java-0.15.0-linux-x86_32.exe}
@@ -150,7 +156,7 @@ function java_compilation() {
 
   run "${JAVAC}" -classpath "${classpath}" -sourcepath "${sourcepath}" \
       -d "${output}/classes" -source "$JAVA_VERSION" -target "$JAVA_VERSION" \
-      -encoding UTF-8 "@${paramfile}"
+      -encoding UTF-8 "@${paramfile}" -J-Xmx500M
 
   log "Extracting helper classes for $name..."
   for f in ${library_jars} ; do
diff --git src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java
index f97ea94..beb2b74 100644
--- src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java
+++ src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java
@@ -407,6 +407,8 @@ public final class BuildConfiguration {
                 return "ppc";
               case ARM:
                 return "arm";
+              case AARCH64:
+                return "aarch64";
               default:
                 return "unknown";
             }
diff --git src/main/java/com/google/devtools/build/lib/rules/java/DeployArchiveBuilder.java src/main/java/com/google/devtools/build/lib/rules/java/DeployArchiveBuilder.java
index 3e2b13a..ef3d9f1 100644
--- src/main/java/com/google/devtools/build/lib/rules/java/DeployArchiveBuilder.java
+++ src/main/java/com/google/devtools/build/lib/rules/java/DeployArchiveBuilder.java
@@ -233,7 +233,7 @@ public class DeployArchiveBuilder {
         outputJar, javaStartClass, deployManifestLines, buildInfoArtifacts, classpathResources,
         runtimeClasspath, includeBuildData, compression, launcher);
 
-    List<String> jvmArgs = ImmutableList.of("-client", SINGLEJAR_MAX_MEMORY);
+    List<String> jvmArgs = ImmutableList.of("-server", SINGLEJAR_MAX_MEMORY);
     ResourceSet resourceSet =
         ResourceSet.createWithRamCpuIo(/*memoryMb = */200.0, /*cpuUsage = */.2, /*ioUsage=*/.2);
 
diff --git src/main/java/com/google/devtools/build/lib/util/CPU.java src/main/java/com/google/devtools/build/lib/util/CPU.java
index 41af4b1..37c0e1b 100644
--- src/main/java/com/google/devtools/build/lib/util/CPU.java
+++ src/main/java/com/google/devtools/build/lib/util/CPU.java
@@ -27,6 +27,7 @@ public enum CPU {
   X86_64("x86_64", ImmutableSet.of("amd64", "x86_64", "x64")),
   PPC("ppc", ImmutableSet.of("ppc", "ppc64", "ppc64le")),
   ARM("arm", ImmutableSet.of("arm", "armv7l")),
+  AARCH64("aarch64", ImmutableSet.of("aarch64")),
   UNKNOWN("unknown", ImmutableSet.<String>of());
 
   private final String canonicalName;
diff --git third_party/BUILD third_party/BUILD
index 1de5fbd..9c4dedc 100644
--- third_party/BUILD
+++ third_party/BUILD
@@ -524,6 +524,11 @@ config_setting(
 )
 
 config_setting(
+    name = "aarch64",
+    values = {"host_cpu": "aarch64"},
+)
+
+config_setting(
     name = "freebsd",
     values = {"host_cpu": "freebsd"},
 )
diff --git third_party/grpc/BUILD third_party/grpc/BUILD
index 2ba07e3..7da3c48 100644
--- third_party/grpc/BUILD
+++ third_party/grpc/BUILD
@@ -29,7 +29,8 @@ filegroup(
         "//third_party:darwin": ["protoc-gen-grpc-java-0.15.0-osx-x86_64.exe"],
         "//third_party:k8": ["protoc-gen-grpc-java-0.15.0-linux-x86_64.exe"],
         "//third_party:piii": ["protoc-gen-grpc-java-0.15.0-linux-x86_32.exe"],
-        "//third_party:arm": ["protoc-gen-grpc-java-0.15.0-linux-x86_32.exe"],
+        "//third_party:arm": ["protoc-gen-grpc-java-0.15.0-linux-arm32.exe"],
+        "//third_party:aarch64": ["protoc-gen-grpc-java-0.15.0-linux-aarch64.exe"],
         "//third_party:freebsd": ["protoc-gen-grpc-java-0.15.0-linux-x86_32.exe"],
     }),
 )
diff --git third_party/protobuf/BUILD third_party/protobuf/BUILD
index 02c7f2d..ede63e9 100644
--- third_party/protobuf/BUILD
+++ third_party/protobuf/BUILD
@@ -28,6 +28,8 @@ filegroup(
         "//third_party:darwin": ["protoc-osx-x86_32.exe"],
         "//third_party:k8": ["protoc-linux-x86_64.exe"],
         "//third_party:piii": ["protoc-linux-x86_32.exe"],
+        "//third_party:arm": ["protoc-linux-arm32.exe"],
+        "//third_party:aarch64": ["protoc-linux-aarch64.exe"],
         "//third_party:freebsd": ["protoc-linux-x86_32.exe"],
     }),
 )
diff --git tools/cpp/cc_configure.bzl tools/cpp/cc_configure.bzl
index b7b057a..7c60729 100644
--- tools/cpp/cc_configure.bzl
+++ tools/cpp/cc_configure.bzl
@@ -150,7 +150,14 @@ def _get_cpu_value(repository_ctx):
     return "x64_windows"
   # Use uname to figure out whether we are on x86_32 or x86_64
   result = repository_ctx.execute(["uname", "-m"])
-  return "k8" if result.stdout.strip() in ["amd64", "x86_64", "x64"] else "piii"
+  machine = result.stdout.strip()
+  if machine in ["arm", "armv7l"]:
+    return "arm"
+  elif machine in ["aarch64"]:
+    return "aarch64"
+  elif machine in ["amd64", "x86_64", "x64"]:
+    return "k8"
+  return "piii"
 
 
 _INC_DIR_MARKER_BEGIN = "#include <...>"
